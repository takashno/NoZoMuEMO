I"mG
<p>こんばんは、takashno（Private Ver）です。<br />
<br />
SpringBoot/SpringMVCを利用してREST-APIを組んでいますが、<br />
REST-APIアプリケーションの排他制御を考えた際に、極力サーバーサイドアプリケーションまたはデータベースサーバーの負荷をかけない方法を考えたいと思いました。
RESTにおけるリソースの条件付き処理（取得/更新）の方法について調べましたのでメモとして残します。<br />
<br />
REST-APIのみならずHTTP（HTTP1.1）には元々ブラウザキャッシュを有効に利用するために、
現在見ているコンテンツとサーバー側に存在するコンテンツの新旧比較を行い制御する方法が策定されています。<br />
具体的には以下のHTTPヘッダとなります。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">ヘッダ</th>
      <th style="text-align: left">Request / Response</th>
      <th style="text-align: left">用途</th>
      <th style="text-align: left">利用されるメソッド</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">If-Match</td>
      <td style="text-align: left">Request</td>
      <td style="text-align: left">コンテンツのバージョンが指定した値と<code class="highlighter-rouge">合致している場合</code>に処理を行うことを指定するヘッダ。</td>
      <td style="text-align: left">GET/HEAD</td>
    </tr>
    <tr>
      <td style="text-align: left">If-None-Match</td>
      <td style="text-align: left">Request</td>
      <td style="text-align: left">コンテンツのバージョンが指定した値と<code class="highlighter-rouge">合致していない場合</code>に処理を行うことを指定するヘッダ。</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: left">ETag</td>
      <td style="text-align: left">Response</td>
      <td style="text-align: left">コンテンツに対するバージョンを通知するためのヘッダ。</td>
      <td style="text-align: left">GET/HEAD</td>
    </tr>
  </tbody>
</table>

<p>上記はサーバーサイドにコンテンツのバージョンを示す値を保有している場合に、
リクエストでその値と合致するか合致しないかで振る舞いを変えたい場合に利用する。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">ヘッダ</th>
      <th style="text-align: left">Request / Response</th>
      <th style="text-align: left">用途</th>
      <th style="text-align: left">利用されるメソッド</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">If-Modified-Since</td>
      <td style="text-align: left">Request</td>
      <td style="text-align: left">コンテンツの最終更新日時が指定した値と<code class="highlighter-rouge">合致していない場合</code>に処理を行うことを指定するヘッダ。</td>
      <td style="text-align: left">GET/HEAD</td>
    </tr>
    <tr>
      <td style="text-align: left">If-Unmodified-Since</td>
      <td style="text-align: left">Request</td>
      <td style="text-align: left">コンテンツの最終更新日時が指定した値と<code class="highlighter-rouge">合致している場合</code>に処理を行うことを指定するヘッダ。</td>
      <td style="text-align: left">POST/PUT/DELETE</td>
    </tr>
    <tr>
      <td style="text-align: left">Last-Modified</td>
      <td style="text-align: left">Response</td>
      <td style="text-align: left">コンテンツに対する最終更新日時を通知するためのヘッダ。</td>
      <td style="text-align: left">GET/HEAD POST/PUT/DELETE</td>
    </tr>
  </tbody>
</table>

<p>上記はサーバーサイドにコンテンツの最終更新日時を示す値を保有している場合に、
リクエストで指定されるヘッダの値と比較し、合致するか合致しないかで振る舞いを変えたい場合に利用する。</p>

<p><br />
ここまでは調査内容です。<br />
SpringMVCでは <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/context/request/WebRequest.html">WebRequest</a>
というインタエースが用意されており、<br />
この実装クラスで<code class="highlighter-rouge">checkNotModified(String etag, long lastModifiedTimestamp)</code>あたりのメソッドを利用すると上記のヘッダを利用した処理実行制御を実現することができました。<br />
実際に利用したクラスは <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/context/request/ServletWebRequest.html">ServletWebRequest</a>
になります。<br />
<br />
まずは実装方法から、GET(HEAD) / POST / PUT / DELETE で試してみました。</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@GetMapping</span><span class="o">(</span><span class="s">"{id}"</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">Sample</span><span class="o">&gt;</span> <span class="nf">getCheckModifiedEtag</span><span class="o">(</span><span class="nc">WebRequest</span> <span class="n">webRequest</span><span class="o">,</span> <span class="nd">@PathVariable</span><span class="o">(</span><span class="s">"id"</span><span class="o">)</span> <span class="nc">String</span> <span class="n">id</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">ParseException</span> <span class="o">{</span>

    <span class="c1">// XXX:本来業務処理で取得</span>
    <span class="nc">String</span> <span class="n">etag</span> <span class="o">=</span> <span class="s">"1"</span><span class="o">;</span>

    <span class="c1">// XXX:本来業務処理で取得</span>
    <span class="nc">SimpleDateFormat</span> <span class="n">sdf</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"EEE, dd MMM yyyy HH:mm:ss zzz"</span><span class="o">,</span> <span class="nc">Locale</span><span class="o">.</span><span class="na">US</span><span class="o">);</span>
    <span class="n">sdf</span><span class="o">.</span><span class="na">setTimeZone</span><span class="o">(</span><span class="no">GMT</span><span class="o">);</span>
    <span class="kt">long</span> <span class="n">lastModified</span> <span class="o">=</span> <span class="n">sdf</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"Sun, 01 Oct 2017 11:11:11 GMT"</span><span class="o">).</span><span class="na">getTime</span><span class="o">();</span>

    <span class="c1">// ここでチェックを行う</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">webRequest</span><span class="o">.</span><span class="na">checkNotModified</span><span class="o">(</span><span class="n">etag</span><span class="o">,</span><span class="n">lastModified</span><span class="o">))</span> <span class="o">{</span>
        <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="c1">// 本来行うべき業務処理</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nc">ResponseEntity</span><span class="o">&lt;</span><span class="nc">Sample</span><span class="o">&gt;(</span>
            <span class="nc">Sample</span><span class="o">.</span><span class="na">builder</span><span class="o">().</span><span class="na">id</span><span class="o">(</span><span class="n">id</span><span class="o">).</span><span class="na">message</span><span class="o">(</span><span class="s">"sample"</span><span class="o">).</span><span class="na">build</span><span class="o">()</span>
            <span class="o">,</span> <span class="nc">HttpStatus</span><span class="o">.</span><span class="na">OK</span><span class="o">);</span>
<span class="o">}</span>

</code></pre></div></div>
<p>メソッドが異なるが、同じ実装で試しているためMappingアノテーションのみの差分となります。<br />
実際に試した結果は文章よりも表で示した方がわかりやすいので表にします。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">メソッド</th>
      <th style="text-align: left">ヘッダ</th>
      <th style="text-align: left">リクエストヘッダ値</th>
      <th style="text-align: left">実態値</th>
      <th style="text-align: left">ステータスコード</th>
      <th style="text-align: left">レスポンスヘッダ</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-Match</td>
      <td style="text-align: left">0</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">ETag &amp; Last-Modified</td>
    </tr>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-Match</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">ETag &amp; Last-Modified</td>
    </tr>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-Match</td>
      <td style="text-align: left">2</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">ETag &amp; Last-Modified</td>
    </tr>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-None-Match</td>
      <td style="text-align: left">0</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">ETag &amp; Last-Modified</td>
    </tr>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-None-Match</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">304</td>
      <td style="text-align: left">ETag &amp; Last-Modified</td>
    </tr>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-None-Match</td>
      <td style="text-align: left">2</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">ETag &amp; Last-Modified</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-Match</td>
      <td style="text-align: left">0</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-Match</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-Match</td>
      <td style="text-align: left">2</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-None-Match</td>
      <td style="text-align: left">0</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-None-Match</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">412</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-None-Match</td>
      <td style="text-align: left">2</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">-</td>
    </tr>
  </tbody>
</table>

<p>結果として、GETメソッド時の「If-None-Match」のみ有効に利用できそうです。<br />
ソースコードまで追ったところ、「If-Match」に関する処理は実装されていませんでした。<br />
次にModified系の検証結果になります。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">メソッド</th>
      <th style="text-align: left">ヘッダ</th>
      <th style="text-align: left">リクエストヘッダ値</th>
      <th style="text-align: left">実態値</th>
      <th style="text-align: left">ステータスコード</th>
      <th style="text-align: left">レスポンスヘッダ</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-Modified-Since</td>
      <td style="text-align: left">0</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">ETag &amp; Last-Modified</td>
    </tr>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-Modified-Since</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">304</td>
      <td style="text-align: left">ETag &amp; Last-Modified</td>
    </tr>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-Modified-Since</td>
      <td style="text-align: left">2</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">304</td>
      <td style="text-align: left">ETag &amp; Last-Modified</td>
    </tr>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-Unmodified-Since</td>
      <td style="text-align: left">0</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">412</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-Unmodified-Since</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">GET</td>
      <td style="text-align: left">If-Unmodified-Since</td>
      <td style="text-align: left">2</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-Modified-Since</td>
      <td style="text-align: left">0</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-Modified-Since</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">412</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-Modified-Since</td>
      <td style="text-align: left">2</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">412</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-Unmodified-Since</td>
      <td style="text-align: left">0</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">412</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-Unmodified-Since</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">-</td>
    </tr>
    <tr>
      <td style="text-align: left">POST/PUT/DELETE</td>
      <td style="text-align: left">If-Unmodified-Since</td>
      <td style="text-align: left">2</td>
      <td style="text-align: left">1</td>
      <td style="text-align: left">200</td>
      <td style="text-align: left">-</td>
    </tr>
  </tbody>
</table>

<p>結果として、GETメソッド時の「If-Modified-Since」は有効に利用できそうです。<br />
POST/PUT/DELETE に関しては、ステータスコードが412になった時点で GET からやり直す振る舞いを
しなければならないということでしょう。
つまりリソースのバージョンもしくは最終更新日時を取得するには情報のリフレッシュが必要だということです。
通常、バージョンもしくは最終更新日時のみが変化していくことは考えづらいため他の情報も更新されていることでしょう。<br />
<br />
以上のようにチェック自体は簡単に実装できるのですが、肝心の現在の最新バージョン、最終更新日時を取得するには
データベースに情報を永続化しているアプリケーションでは結局データベースへ問い合わせにいくしかないはずなので処理コストは変化しないというよりは
下手すると増えそうです。こうなるとバージョンまたは最終更新日時のキャッシュも視野に入れないといけないのでしょうか・・・<br />
<br />
悩みましたが、答えがでませんでした。。。<br />
何か答えやヒントをくださる方がおられたらコメントいただけると幸いです。</p>
:ET